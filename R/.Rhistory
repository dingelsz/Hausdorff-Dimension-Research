# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
radius
xRadius
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_5000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_50000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_500000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_5000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
library(stringr)
x <- c()
yFrontier <- c()
yArea <- c()
yDiameter <- c()
for (f in list.files('../Data/')) {
csvData <- read.csv(paste0("../Data/", f))
# Get the indexes of each _
underscoreIndexes <- str_locate_all(f, "_")[[1]]
# The number of steps is inside the 2nd and 3rd _. +1 and -1 to not include the _
steps = as.integer(substr(f, underscoreIndexes[2] + 1, underscoreIndexes[3] - 1))
names(csvData) <- c("x", "y", "isFrontier")
csvData$isFrontier = as.logical(csvData$isFrontier)
x <- c(x, steps)
yFrontier <- c(yFrontier, sum(csvData$isFrontier))
yArea <- c(yArea, length(csvData$x))
width = max(csvData$x) - min(csvData$x)
height = max(csvData$y) - min(csvData$y)
yDiameter <- c(yDiameter, sqrt(width^2 + height^2))
}
fFrontier <- lm(log(yFrontier) ~ log(x))
fArea <- lm(log(yArea) ~ log(x))
fDiameter <- lm(log(yDiameter) ~ log(x))
par(mar=c(1,1,1,1))
par(mfrow=c(3,1))
plot(log(yFrontier) ~ log(sqrt(x)), main = 'Logarithmic Number of Frontier Points vs Logarithmic Number of Steps')
abline(fFrontier$coefficients[1], fFrontier$coefficients[2], col='red')
plot(log(yArea) ~ log(sqrt(x)), main = 'Logarithmic Area vs Logarithmic Number of Steps')
abline(fArea$coefficients[1], fArea$coefficients[2], col='red')
plot(log(yDiameter) ~ log(sqrt(x)), main = 'Logarithmic Diameter vs Logarithmic Number of Steps')
abline(fDiameter$coefficients[1], fDiameter$coefficients[2], col='red')
print(paste0("Frontier Coefficient: ", fFrontier$coefficients[2]))
print(paste0("Area Coefficient: ", fArea$coefficients[2]))
print(paste0("Diameter Coefficient: ", fDiameter$coefficients[2]))
0.888943190225827 / 0.522948307607315
library(stringr)
x <- c()
yFrontier <- c()
yArea <- c()
yDiameter <- c()
for (f in list.files('../Data/')) {
csvData <- read.csv(paste0("../Data/", f))
# Get the indexes of each _
underscoreIndexes <- str_locate_all(f, "_")[[1]]
# The number of steps is inside the 2nd and 3rd _. +1 and -1 to not include the _
steps = as.integer(substr(f, underscoreIndexes[2] + 1, underscoreIndexes[3] - 1))
names(csvData) <- c("x", "y", "isFrontier")
csvData$isFrontier = as.logical(csvData$isFrontier)
x <- c(x, steps)
yFrontier <- c(yFrontier, sum(csvData$isFrontier))
yArea <- c(yArea, length(csvData$x))
width = max(csvData$x) - min(csvData$x)
height = max(csvData$y) - min(csvData$y)
yDiameter <- c(yDiameter, sqrt(width^2 + height^2))
}
fFrontier <- lm(log(yFrontier) ~ log(x))
fArea <- lm(log(yArea) ~ log(x))
fDiameter <- lm(log(yDiameter) ~ log(x))
par(mar=c(1,1,1,1))
par(mfrow=c(3,1))
plot(log(yFrontier) ~ log(sqrt(x)), main = 'Logarithmic Number of Frontier Points vs Logarithmic Number of Steps')
abline(fFrontier$coefficients[1], fFrontier$coefficients[2], col='red')
plot(log(yArea) ~ log(sqrt(x)), main = 'Logarithmic Area vs Logarithmic Number of Steps')
abline(fArea$coefficients[1], fArea$coefficients[2], col='red')
plot(log(yDiameter) ~ log(sqrt(x)), main = 'Logarithmic Diameter vs Logarithmic Number of Steps')
abline(fDiameter$coefficients[1], fDiameter$coefficients[2], col='red')
print(paste0("Frontier Coefficient: ", fFrontier$coefficients[2]))
print(paste0("Area Coefficient: ", fArea$coefficients[2]))
print(paste0("Diameter Coefficient: ", fDiameter$coefficients[2]))
0.888943190225827 / 0.522948307607315
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_5000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_5000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_5000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_5000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_5000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
# Random Walk
library(stringr)
library(MASS)
N_STEPS <- 500000
earthworm_data <- list()
xRadius <- c()
yPointsClose <- c()
yAverage <- c()
allData <- list()
# This is every file with earthworm format for method 2
files <- list.files('../Data/')[grep("data_for_5000_steps_1_radius_\\d+_M2.csv", list.files('../Data/'))]
for (f in files) {
# Need to set header to FALSE so we can read the first line
csvData <- read.csv(paste0("../Data/", f), header = TRUE)
radius <- str_split(f, "_")[[1]][7]
allData[[radius]] <- csvData
names(csvData) <- c("x", "y", "isFrontier", "close")
csvData$isFrontier = as.logical(csvData$isFrontier)
yFrontierPointsClose <- csvData$close[csvData$isFrontier]
yPointsClose <- c(yPointsClose, yFrontierPointsClose)
yAverage <- c(yAverage, mean(yFrontierPointsClose))
xRadius <- c(xRadius, rep(as.integer(radius), length(yFrontierPointsClose)))
earthworm_data[[radius]] <- csvData
}
logX <- log(xRadius)
logY <- log(yPointsClose) # This creates -Inf values for log(0), we will replace with 0
logY <- replace(logY, logY == -Inf, 0)
allModel <- lm(logY ~ logX)
meanModel <- lm(log(yAverage) ~ log(unique(xRadius)))
#image
# plot(csvData$y~csvData$x, pch='.')
# points(csvData$y[csvData$isFrontier]~csvData$x[csvData$isFrontier], pch='.', col='red')
# All points
# plot(logY ~ logX, ylab = "Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
# abline(allModel$coefficients[1], allModel$coefficients[2], col='red')
# Averages for each radius
plot(log(yAverage) ~ log(unique(xRadius)), ylab = "Average Surrounding Points", xlab = "Radius Size", main = paste0('In Log Scale, ', allModel$coefficients[2]))
abline(meanModel$coefficients[1], meanModel$coefficients[2], col = 'red')
library(stringr)
x <- c()
yFrontier <- c()
yArea <- c()
yDiameter <- c()
for (f in list.files('../Data/')) {
csvData <- read.csv(paste0("../Data/", f))
# Get the indexes of each _
underscoreIndexes <- str_locate_all(f, "_")[[1]]
# The number of steps is inside the 2nd and 3rd _. +1 and -1 to not include the _
steps = as.integer(substr(f, underscoreIndexes[2] + 1, underscoreIndexes[3] - 1))
names(csvData) <- c("x", "y", "isFrontier")
csvData$isFrontier = as.logical(csvData$isFrontier)
x <- c(x, steps)
yFrontier <- c(yFrontier, sum(csvData$isFrontier))
yArea <- c(yArea, length(csvData$x))
width = max(csvData$x) - min(csvData$x)
height = max(csvData$y) - min(csvData$y)
yDiameter <- c(yDiameter, sqrt(width^2 + height^2))
}
fFrontier <- lm(log(yFrontier) ~ log(x))
fArea <- lm(log(yArea) ~ log(x))
fDiameter <- lm(log(yDiameter) ~ log(x))
par(mar=c(1,1,1,1))
par(mfrow=c(3,1))
plot(log(yFrontier) ~ log(sqrt(x)), main = 'Logarithmic Number of Frontier Points vs Logarithmic Number of Steps')
abline(fFrontier$coefficients[1], fFrontier$coefficients[2], col='red')
plot(log(yArea) ~ log(sqrt(x)), main = 'Logarithmic Area vs Logarithmic Number of Steps')
abline(fArea$coefficients[1], fArea$coefficients[2], col='red')
plot(log(yDiameter) ~ log(sqrt(x)), main = 'Logarithmic Diameter vs Logarithmic Number of Steps')
abline(fDiameter$coefficients[1], fDiameter$coefficients[2], col='red')
print(paste0("Frontier Coefficient: ", fFrontier$coefficients[2]))
print(paste0("Area Coefficient: ", fArea$coefficients[2]))
print(paste0("Diameter Coefficient: ", fDiameter$coefficients[2]))
